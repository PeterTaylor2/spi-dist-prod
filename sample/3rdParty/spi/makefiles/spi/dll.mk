###########################################################################
# Commands for compiling an SPI style DLL.
#
# Adds extra includes and libraries, and expects the source code in the
# usual place as generated by SPCL.
###########################################################################

include $(U_SPI_HOME)/makefiles/version.mk

U_SPI_BUILD_DIR?=$(G_BUILD_DIR)
U_SRC_DIR=src
U_INC_DIR=.
U_INCLUDES+=-I$(U_SPI_HOME)
U_CONFIG_DIR?=../config

-include properties.mk

U_FORCE_REBUILD+=Makefile properties.mk
U_FORCE_REBUILD+=$(U_SPI_HOME)/makefiles/version.mk
###########################################################################
# the following values depend on properties.mk but can be overridden
###########################################################################
U_TARGET?=$(U_SERVICE_DLL)
U_VCPROJ?=$(U_SERVICE)-dll
U_CFLAGS+=-D$(U_DECLSPEC)_EXPORT
U_DEBUG_CFLAGS+=-D$(U_SERVICE_DEBUG)

include $(U_SPI_HOME)/makefiles/spi/base_service.mk
include $(U_SPI_HOME)/makefiles/spi/runtime.mk

###########################################################################
# define the SPI runtime libraries
#
# we need both the main DLL and spi_util
###########################################################################
ifeq ($(G_PLATFORM),win32)

U_DEP_LIBS+=\
$(I_SPI_RUNTIME_BIN_DIR)/$(G_LIB_PFX)$(SPI_DLL)$(G_LIB_EXT)\
$(I_SPI_RUNTIME_BIN_DIR)/$(G_LIB_PFX)$(SPI_UTIL_DLL)$(G_LIB_EXT)\
$(I_SPI_RUNTIME_BIN_DIR)/$(G_LIB_PFX)spi_boost$(G_LIB_EXT)

U_LIBS+=\
$(I_SPI_RUNTIME_BIN_DIR)/$(G_LIB_PFX)$(SPI_DLL)$(G_LIB_EXT)\
$(I_SPI_RUNTIME_BIN_DIR)/$(G_LIB_PFX)$(SPI_UTIL_DLL)$(G_LIB_EXT)\
$(I_SPI_RUNTIME_BIN_DIR)/$(G_LIB_PFX)spi_boost$(G_LIB_EXT)

else

U_DEP_LIBS+=\
$(I_SPI_RUNTIME_BIN_DIR)/lib$(SPI_DLL)$(G_DLL_EXT)\
$(I_SPI_RUNTIME_BIN_DIR)/lib$(SPI_UTIL_DLL)$(G_DLL_EXT)\
$(I_SPI_RUNTIME_BIN_DIR)/libspi_boost$(G_LIB_EXT)

U_LIBS+=\
-L $(I_SPI_RUNTIME_BIN_DIR) -l$(SPI_DLL) -l$(SPI_UTIL_DLL)\
$(I_SPI_RUNTIME_BIN_DIR)/libspi_boost$(G_LIB_EXT)

endif

###########################################################################
# standard commands for building a DLL
###########################################################################
include $(U_SPI_HOME)/makefiles/build/dll.mk

###########################################################################
# optional pre-build command - usually we run make separately in the
# configuration directory and then run make in the DLL directory, but
# you can build everything in one go within this directory my running
# "make code" followed by "make"
###########################################################################
code:
	$(MAKE) -C $(U_CONFIG_DIR)

###########################################################################
# what we need to do after the build - basically we are copying the DLLs
# to the ../$(G_ABI) directory
###########################################################################
post_build: dll extras

extras::

dll: ../$(G_ABI)/$(G_DLL_PFX)$(SPI_DLL)$(G_DLL_EXT)
dll: ../$(G_ABI)/$(G_DLL_PFX)$(SPI_UTIL_DLL)$(G_DLL_EXT)
dll: ../$(G_ABI)/$(G_DLL_PFX)$(U_TARGET)$(G_DLL_EXT)

../$(G_ABI)/$(G_DLL_PFX)$(SPI_DLL)$(G_DLL_EXT): $(I_SPI_RUNTIME_BIN_DIR)/$(G_DLL_PFX)$(SPI_DLL)$(G_DLL_EXT)
	@mkdir -p ../$(G_ABI)
	cp -pf $< ../$(G_ABI)
ifeq ($(G_PLATFORM),win32)
	@if [ -f $(basename $<).pdb ]; then cp -pf $(basename $<).pdb ../$(G_ABI); fi
endif

../$(G_ABI)/$(G_DLL_PFX)$(SPI_UTIL_DLL)$(G_DLL_EXT): $(I_SPI_RUNTIME_BIN_DIR)/$(G_DLL_PFX)$(SPI_UTIL_DLL)$(G_DLL_EXT)
	@mkdir -p ../$(G_ABI)
	cp -pf $< ../$(G_ABI)
ifeq ($(G_PLATFORM),win32)
	@if [ -f $(basename $<).pdb ]; then cp -pf $(basename $<).pdb ../$(G_ABI); fi
endif

../$(G_ABI)/$(G_DLL_PFX)$(U_TARGET)$(G_DLL_EXT): $(G_BUILD_DIR)/$(G_DLL_PFX)$(U_TARGET)$(G_DLL_EXT)
	@mkdir -p ../$(G_ABI)
	cp -pf $< ../$(G_ABI)
ifeq ($(G_PLATFORM),win32)
	@if [ -f $(basename $<).pdb ]; then cp -pf $(basename $<).pdb ../$(G_ABI); fi
endif

###########################################################################
# extra clean command and vs10-clean commands above and beyond the standard
# commands
###########################################################################
clean::
	rm -fr ../$(G_ABI)

vs-clean::
	rm -f ../$(G_ABI)/*$(G_DLL_EXT)
